# 模型配置
model:
  type: PT-v3m1
  in_channels: 6               # 最终确认：6 维 (u, v, sin, cos, u_std, v_std)
  num_classes: 5
  cls_mode: False
  order: ["z", "z-trans"]
  pdnorm_bn: False
  pdnorm_ln: False

  # --- 编码器参数 ---
  enc_depths: [1, 1, 3, 1]
  enc_channels: [32, 64, 128, 256]
  enc_num_head: [2, 4, 8, 16]
  stride: [2, 2, 2]
  enc_patch_size: [48, 48, 48, 48]
  # --- 解码器参数 ---
  dec_depths: [1, 1, 1]
  dec_channels: [64, 64, 128]
  dec_num_head: [4, 4, 8]
  dec_patch_size: [48, 48, 48]
  # --- 默认参数 ---
  mlp_ratio: 4
  qkv_bias: True
  drop_path: 0.5
  enable_flash: False

# 数据配置
data:
  train:
    type: WindShearDataset
    split: train
    data_root: "/mnt/d/model/wind_datas/csv_labels"
    filter_full_paths: # 可选，用于过滤已知问题样本
      - "/mnt/d/model/wind_datas/csv_labels/20230310/datas4/period107_labeled.csv"
    k_neighbors: 16  # wind_shear.py 计算 u_std, v_std 时使用
    # radius: 100.0    # 【移除】 K-NN 只使用了 k
    transform:
      # 步骤 1: 采样、SMOTE、欠采样（在 *原始* 6D 数据上运行）
      - type: WindShearGridSample
        grid_size: 80.0          # 在 adaptive=True 时被忽略，仅作占位
        min_points: 50
        adaptive: True           # 关键：自适应网格
        balance_data: True       # 关键：开启训练集平衡
        rare_classes: [0, 3, 4]  # 根据统计
        dominant_classes: [1] # 根据统计
        smote_ratio: 0.5
        undersample_ratio: 2.0
      # 步骤 2: 归一化（在 *采样后* 的数据上运行）
      - type: NormalizeFeatures
        # !! [重要] !! 您必须重新计算并替换以下 3D+6D 统计数据占位符
        coord_mean: [ -259.364654, -30.989677, 288.043440 ]
        coord_std: [ 2754.489939, 2450.016714, 183.868753 ]
        feat_mean: [ 0.120420, -0.444981, -0.048225, -0.039401, 0.690402, 0.618837 ]
        feat_std: [ 4.415576, 4.438648, 0.741363, 0.668209, 0.534099, 0.511530 ]
      # 步骤 3: 转为 Tensor
      - type: ToTensor

  val:
    type: WindShearDataset
    split: val
    data_root: "/mnt/d/model/wind_datas/csv_labels"
    k_neighbors: 16
    # radius: 100.0    # 【移除】
    transform:
      - type: WindShearGridSample
        grid_size: 80.0
        min_points: 50
        adaptive: True
        balance_data: False # 关键：关闭验证集平衡
      - type: NormalizeFeatures
        # !! [重要] !! 使用与 train 集相同的统计数据
        coord_mean: [ -259.364654, -30.989677, 288.043440 ]
        coord_std: [ 2754.489939, 2450.016714, 183.868753 ]
        feat_mean: [ 0.120420, -0.444981, -0.048225, -0.039401, 0.690402, 0.618837 ]
        feat_std: [ 4.415576, 4.438648, 0.741363, 0.668209, 0.534099, 0.511530 ]
      - type: ToTensor

  test:
    type: WindShearDataset
    split: test
    data_root: "/mnt/d/model/wind_datas/csv_labels"
    k_neighbors: 16
    # radius: 100.0    # 【移除】
    transform:
      - type: WindShearGridSample
        grid_size: 80.0
        min_points: 50
        adaptive: True
        balance_data: False # 关键：关闭测试集平衡
      - type: NormalizeFeatures
        # !! [重要] !! 使用与 train 集相同的统计数据
        coord_mean: [ -259.364654, -30.989677, 288.043440 ]
        coord_std: [ 2754.489939, 2450.016714, 183.868753 ]
        feat_mean: [ 0.120420, -0.444981, -0.048225, -0.039401, 0.690402, 0.618837 ]
        feat_std: [ 4.415576, 4.438648, 0.741363, 0.668209, 0.534099, 0.511530 ]
      - type: ToTensor

# --- 训练配置 ---
train:
  epochs: 100
  batch_size: 2
  num_workers: 8
  prefetch_factor: 8
  pin_memory: True
  optimizer:
    type: AdamW
    lr: 0.0002
    weight_decay: 0.001
  scheduler:
    type: CosineAnnealingLR
    T_max: 100
    eta_min: 0.000002 # 原始配置为 0.00002，这里更小
  class_weights: [3.0, 0.2, 1.5, 12.0, 20.0] # 建议重新评估或设为 1.0 [ 0.8, 0.1, 1.0, 4.5, 2.5 ]
# --- 验证/测试/日志 配置 (保持不变) ---
evaluation:
  interval: 1
  batch_size: 2
  num_workers: 8
  prefetch_factor: 8
  pin_memory: True
test:
  batch_size: 2
  num_workers: 8
  prefetch_factor: 8
  pin_memory: True
checkpoint:
  interval: 5
log:
  interval: 50
